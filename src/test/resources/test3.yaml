stopOnFailure: true
logStackTrace: true
logTiming: true
logContext: true
config:
  - now: {dest: "now1", to: "MM-dd-YY", zone: Z}
  - now: {dest: "now2", to: "unix_ms", zone: Z}
  - now: {dest: "now3", to: "unix_s", zone: Z}
  - add-i: {dest: jsonMapString, value: '{ "this": "that" }'}
  - json-map: {source: jsonMapString, dest: jsonMapped}
  - add-i: {dest: jsonListString, value: '[ "this", "that" ]'}
  - json-list: {source: jsonListString, dest: jsonListed}
  - as-list: {sources: [now1, now2, now3], dest: list1}
  - add-i: {dest: "a.a", value: 1.0}
  - add-i: {dest: "z.z", value: 1.0}
  - math: {dest: "mathResult", exp: "{{a.a}} + {{z.z}}"}
  - add-i: {dest: "user", value: "${USER}"}
  - add-m: {dest: "copy", exp: "{{a.a}}"}
  - add-i: {dest: "a.b", value: 2.0}
  - add-i: {dest: "x", value: "y"}
  - add-i: {dest: "x.y", value: "1"}
  - look-up: {sources: ["x.y"], dests: ["x.y.lookup"], default: "unknown", dict: {"1": "some_metadata"} }
  - add-i: {dest: "x.z", value: "this is a string"}
  - add-i: {dest: "x.csv", value: "this, is, a, csv, string"}
  - add-i: {dest: "p.pipe", value: "this|is|a|piped|string"}
  - cast: {source: "x.y", to: "int"}
  - translate: {source: "x.y", default: "unknown", dict: {"1": "one"} }
  - b64: {source: "x.z", dest: "encoded", encode: true}
  - b64: {source: "encoded", dest: "decoded", encode: false}
  - hash: {source: "decoded", dest: "hashed", algo: "SHA-256"}
  - keyed-hash: {source: "decoded", dest: "hashed", iter: 10000, salt: "somesalt", pass: "${USER}"}
  - delimit: {source: x.csv, delimiter: ',', quote: '"', dests: [a.first, a.second, a.third, a.fourth, a.fifth] }
  - delimit: {source: p.pipe, delimiter: '|', quote: '"', dests: [b.first, b.second, b.third, b.fourth, b.fifth] }
  - if:
    compare: {exp: "{{a.a}} > {{a.b}}"}
    then:
      - remove: {sources: ["x.y"]}

  - if:
    matches: {source: "user", regex: ".*dennis*"}
    then:
      - add-i: {dest: "matches1", value: "user does not match .*dennis*"}

  - if:
    not:
      - matches: {source: "user", regex: ".*truck*"}
    then:
      - add-i: {dest: "matches1", value: "user does not match .*truck*"}

  - add-i: {dest: someString, value: y}
  - if:
    in: {source: someString, list: [a, b, c, y]}
    then:
      - add-i: {dest: "matches1", value: "someString in: [a, b, c, y]"}


  - rename: {dict: {"a.a" : "a1.a1", "z.z" : "z1.z1"}}
